version: '3.9'

services:
  # Frontend Development
  frontend-dev:
    container_name: weddingtravel-dev
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    command: npm run dev -- --host 0.0.0.0
    networks:
      - weddingtravel-network
    restart: unless-stopped

  # Frontend Production
  frontend-prod:
    container_name: weddingtravel-prod
    build:
      context: .
      target: production
      dockerfile: Dockerfile
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
        - NODE_ENV=production
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
    networks:
      - weddingtravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Nginx Reverse Proxy (optional, for advanced setups)
  nginx:
    container_name: weddingtravel-nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend-prod
    networks:
      - weddingtravel-network
    restart: unless-stopped
    profiles:
      - with-proxy

networks:
  weddingtravel-network:
    driver: bridge

volumes:
  node_modules: